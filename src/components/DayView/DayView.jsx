import { useState } from "react";

import "./DayView.sass";

const DayView = () => {
    const [hashtags, setHashtags] = useState([]);
    const [newHashtag, setNewHashtag] = useState("");
    const [showHashPopup, setShowHashPopup] = useState(false);
    const [showPopup, setShowPopup] = useState(false);
    const [activityName, setActivityName] = useState('');
    const [measurementType, setMeasurementType] = useState('minutes');
    const [activityValue, setActivityValue] = useState('');
    const [activities, setActivities] = useState([]);
    const [errorMsg, setErrorMsg] = useState('');

    const handleAddClickHash = () => {
        setShowHashPopup(!showHashPopup);
    }

    const handleSubmitHashtag = () => {
        const trimmed = newHashtag.trim();
        if (trimmed) {
            setHashtags([...hashtags, trimmed]);
            setNewHashtag("");
            setShowHashPopup(false);
        }
    };

    const handleRemoveHashtag = (indexToRemove) => {
        setHashtags(hashtags.filter((_, i) => i != indexToRemove));
    }

    const handleAddClick = () => {
        setShowPopup(!showPopup);
    }

    const handleSubmit = () => {
        if (!activityName.trim() || !activityValue) {
            setErrorMsg('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }

        const newActivity = {
            name: activityName.trim(),
            type: measurementType,
            value: activityValue
        };

        setActivities([...activities, newActivity]);

        setActivityName("");
        setMeasurementType("minutes");
        setActivityValue("");
        setShowPopup(false);
        setErrorMsg('');
    };


    return (
        <div className="day-view">
            <button className="plus" onClick={handleAddClickHash}>+</button>
            {showHashPopup && (
                <div className="popup__hash">
                    <input
                        type="text"
                        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ö–µ—à—Ç–µ–≥–∞"
                        value={newHashtag}
                        onChange={(e) => setNewHashtag(e.target.value)}
                    />
                    <button onClick={handleSubmitHashtag}>–î–æ–±–∞–≤–∏—Ç—å</button>
                </div>
            )}
            <h2>1 –∞–ø—Ä–µ–ª—è</h2>
            <textarea placeholder="–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è —Å–¥–µ–ª–∞–ª"></textarea>
            {hashtags.length > 0 && (
                <div className="hashtags">
                    {hashtags.map((tag, index) => (
                        <span key={index} className="hashtag">
                            #{tag}
                            <button className="remove-btn" onClick={() => handleRemoveHashtag(index)}>√ó</button>
                        </span>
                    ))}
                </div>
            )}
            <div className="time-spent">
                <label>–í—Ä–µ–º–µ–Ω–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ —Å –ø–æ–ª—å–∑–æ–π:</label>
                <button className="add-btn" onClick={handleAddClick}>–î–æ–±–∞–≤–∏—Ç—å</button>

                {showPopup && (
                    <div className="add-popup">
                        <input
                            type="text"
                            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á—Ç–µ–Ω–∏–µ)"
                            value={activityName}
                            onChange={(e) => setActivityName(e.target.value)}
                        />
                        <select
                            value={measurementType}
                            onChange={(e) => setMeasurementType(e.target.value)}
                        >
                            <option value="minutes">–ú–∏–Ω—É—Ç—ã</option>
                            <option value="count">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</option>
                        </select>
                        <input
                            type="number"
                            placeholder={measurementType === "minutes" ? "–°–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç?" : "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑?"}
                            value={activityValue}
                            onChange={(e) => setActivityValue(e.target.value)}
                        />
                        <button onClick={handleSubmit}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    </div>
                )}
                {errorMsg && <div className="error">{errorMsg}</div>}
                {activities.length > 0 && (
                    <div className="activities-list">
                        {activities.map((act, idx) => (
                            <div key={idx} className="activity-item">
                                <span>{act.name} ‚Äî {act.value} {act.type === "minutes" ? "–º–∏–Ω—É—Ç" : "—Ä–∞–∑"}</span>
                                <div className="progress-bar" />
                            </div>
                        ))}
                    </div>
                )}
            </div>

            <div className="satisfaction">
                <label>–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ç—ã –¥–æ–≤–æ–ª–µ–Ω —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ–º —Å–µ–≥–æ–¥–Ω—è?</label>
                <div className="emoji-picker">
                <span>üò°</span>
                <span>üòû</span>
                <span>üòê</span>
                <span>üòä</span>
                <span>üòÉ</span>
                </div>
            </div>
        </div>
    );
};

export default DayView;
